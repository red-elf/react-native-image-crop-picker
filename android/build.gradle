apply plugin: "com.android.library"
apply plugin: "com.facebook.react"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "kotlinx-serialization"

react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '..'
    // root = file("../")
    //   The folder where the react-native NPM package is. Default is ../node_modules/react-native
    // reactNativeDir = file("../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../node_modules/@react-native/codegen
    // codegenDir = file("../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../node_modules/react-native/cli.js
    // cliFile = file("../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

def DEFAULT_COMPILE_SDK_VERSION = 30
def DEFAULT_BUILD_TOOLS_VERSION = "29.0.3"
def DEFAULT_TARGET_SDK_VERSION = 30
def DEFAULT_MIN_SDK_VERSION = 16

android {

    namespace "com.reactnative.ivpusic.imagepicker"

    compileSdk DEFAULT_COMPILE_SDK_VERSION
    buildToolsVersion DEFAULT_BUILD_TOOLS_VERSION

    defaultConfig {

        versionCode 2
        minSdkVersion DEFAULT_MIN_SDK_VERSION
        targetSdkVersion DEFAULT_TARGET_SDK_VERSION
        missingDimensionStrategy 'react-native-camera', 'general'
    }

    lintOptions {

        abortOnError false
    }

    dependencies {

        implementation "com.facebook.react:react-android"
        implementation "com.facebook.android:facebook-android-sdk:latest.release"

        if (hermesEnabled.toBoolean()) {

            implementation "com.facebook.react:hermes-android"

        } else {

            implementation jscFlavor
        }

        implementation 'com.github.yalantis:ucrop:2.2.6-native'
        implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    }
}

allprojects {

    repositories {

        maven { url "https://jitpack.io" }
        google()
        mavenLocal()
        mavenCentral()
    }
}

buildscript {

    ext {

        buildToolsVersion = "34.0.0"
        minSdkVersion = 23
        compileSdkVersion = 34
        targetSdkVersion = 34
        ndkVersion = "25.1.8937393"
        kotlinVersion = "1.8.0"
    }

    repositories {

        maven { url "https://jitpack.io" }
        google()
        mavenLocal()
        mavenCentral()
    }

    dependencies {

        classpath "com.android.tools.build:gradle"
        classpath "com.facebook.react:react-native-gradle-plugin"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin"
        classpath "org.jetbrains.kotlin:kotlin-serialization:${kotlinVersion}"
    }
}

